name: Close [skip ci] Update dependency PRs

on:
  schedule:
    - cron: '0 0 25 * *' 
  workflow_dispatch: # Allows manual triggering

jobs:
  close-skip-ci-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install semver
        run: npm install semver

      - name: Close [skip ci] Update dependency PRs
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { execSync } = require('child_process');
            execSync('npm install semver');
            const semver = require('semver');
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const pulls = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open'
            });

            const oneYearAgo = new Date();
            oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);

            const mainBranchPackageJson = await github.rest.repos.getContent({
              owner,
              repo,
              path: 'package.json',
              ref: 'master' 
            });

            const packageJsonContent = Buffer.from(mainBranchPackageJson.data.content, 'base64').toString();
            const packageJson = JSON.parse(packageJsonContent);

            for (const pull of pulls.data) {
              const createdAt = new Date(pull.created_at);
              if (pull.title.startsWith('[skip ci] Update dependency')) {
                const versionMatch = pull.title.match(/\[skip ci\] Update dependency (.+) to v(.+)/);

                if (versionMatch) {
                  const dependencyName = versionMatch[1];
                  let prVersion = versionMatch[2];

                  // If the PR version is a single number, append '.0.0'
                  if (/^\d+$/.test(prVersion)) {
                    prVersion += '.0.0';
                  }
                  const installedVersion = packageJson.dependencies[dependencyName];

                  if (installedVersion && semver.gt(installedVersion, prVersion)) {
                    await github.rest.pulls.update({
                      owner,
                      repo,
                      pull_number: pull.number,
                      state: 'closed'
                    });
                    console.log(`Closed PR #${pull.number} with title "${pull.title}" because installed version (${installedVersion}) is newer than PR version (${prVersion})`);
                  }
                }
              }
            }
            execSync('npm uninstall semver');

      - name: Remove semver
        run: npm uninstall semver
